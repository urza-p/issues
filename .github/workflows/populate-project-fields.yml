name: Populate Project Fields

on:

  issues:

    types: [opened, edited]




jobs:

  populate-fields:

    runs-on: ubuntu-latest

    steps:

      - name: Check if issue has custom fields

        id: check_fields

        uses: actions/github-script@v4

        with:

          script: |

            const fields = context.payload.issue.body.input_fields;

            console.log(context.payload.issue.body)

            const customFields = {

              'Logged by': 'logged-by',

              'Reported on': 'reported-on',

              'Epic Features': 'epic-features',

              'URL': 'url',

              'Severity': 'severity',

              'Environment': 'environment'

            };

            const fieldsToUpdate = {};

            Object.keys(customFields).forEach((customField) => {

              const fieldId = customFields[customField];

              console.log(fieldId);

              if (fields && fields[fieldId] && fields[fieldId].value) {

                console.log("field has id and value");

                fieldsToUpdate[customField] = fields[fieldId].value;

                console.log(fields[fieldId].value);

              }

            });

            return fieldsToUpdate;

      - name: Update project card

        uses: actions/github-script@v4

        with:

          script: |

            const projectNumber = 1; // Replace with your project number

            const columnName = 'To do'; // Replace with your column name

            const cardId = context.payload.issue.project_card?.id; // Use optional chaining to handle undefined property

            if (cardId) {

              const fieldsToUpdate = context.outputs.fieldsToUpdate;

              const octokit = github.getOctokit(process.env.GITHUB_TOKEN);

              const { data: project } = await octokit.rest.projects.get({

                project_id: projectNumber

              });

              const { data: columns } = await octokit.rest.projects.listColumns({

                project_id: projectNumber

              });

              const column = columns.find((c) => c.name === columnName);

              if (column) {

                await octokit.rest.projects.moveCard({

                  card_id: cardId,

                  position: 'top',

                  column_id: column.id

                });

              }

            } else {

              console.log('message: Project card not found.');

            }
