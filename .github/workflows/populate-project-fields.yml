name: Populate Project Fields
on:
  issues:
    types: [opened, edited]

jobs:
  populate-fields:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue has custom fields
        id: check_fields
        uses: actions/github-script@v4
        with:
          script: |
            const fields = context.payload.issue.body.fields;
            const customFields = {};
            // Add your custom field names and issue body field names mapping here
            customFields['Logged by'] = 'logged-by';
            customFields['Reported on'] = 'reported-on';
            customFields['Epic - Features'] = 'epic-features';
            customFields['URL'] = 'url';
            customFields['Severity'] = 'severity';
            customFields['Environment'] = 'environment';
            const fieldsToUpdate = {};
            Object.keys(customFields).forEach((customField) => {
              if (fields.hasOwnProperty(customFields[customField])) {
                fieldsToUpdate[customField] = fields[customFields[customField]];
              }
            });
            return fieldsToUpdate;
      - name: Update project card
        uses: actions/github-script@v4
        with:
          script: |
            const projectNumber = 1; // Replace with your project number
            const columnName = 'To do'; // Replace with your column name
            const cardId = context.payload.issue.project_card.id;
            const fieldsToUpdate = context.outputs.fieldsToUpdate;
            const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
            const { data: project } = await octokit.rest.projects.get({
              project_id: projectNumber
            });
            const { data: columns } = await octokit.rest.projects.listColumns({
              project_id: projectNumber
            });
            const column = columns.find((c) => c.name === columnName);
            if (column) {
              await octokit.rest.projects.updateCard({
                card_id: cardId,
                project_id: projectNumber,
                column_id: column.id,
                note: JSON.stringify(fieldsToUpdate)
              });
            });
