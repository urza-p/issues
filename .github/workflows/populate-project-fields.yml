name: Populate Project Fields

on:
  issues:
    types: [opened, edited]

jobs:
  populate-fields:
    runs-on: ubuntu-latest

    steps:
      - name: Check if issue has custom fields
        id: check_fields
        uses: actions/checkout@v3
        with: 
          issue_number: ${{ github.event.issue.number || 10 }}   
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Showcasing the parsed payload data 
        id: parse_data
        run: |
          echo '${{ toJson(steps.parse.outputs.payload) }}'
          

      - name: Update project card

        uses: actions/github-script@v4

        with:

          script: |

            const projectNumber = 1; // Replace with your project number

            const columnName = 'To do'; // Replace with your column name

            const cardId = context.payload.issue.project_card?.id; // Use optional chaining to handle undefined property

            if (cardId) {

              const fieldsToUpdate = context.outputs.fieldsToUpdate;

              const octokit = github.getOctokit(process.env.GITHUB_TOKEN);

              const { data: project } = await octokit.rest.projects.get({

                project_id: projectNumber

              });

              const { data: columns } = await octokit.rest.projects.listColumns({

                project_id: projectNumber

              });

              const column = columns.find((c) => c.name === columnName);

              if (column) {

                await octokit.rest.projects.moveCard({

                  card_id: cardId,

                  position: 'top',

                  column_id: column.id

                });

              }

            } else {

              console.log('message: Project card not found.');

            }
